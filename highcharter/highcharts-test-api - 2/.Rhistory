unique() %>%
Rtsne()
package_Imports
package_Imports$N
package_Imports$Y
names(package_Imports$Y) <- c("x","y")
package_Imports$Y
colnames(package_Imports$Y) <- c("x","y")
package_Imports$Y
package_Imports$N
hchart(package_Imports$Y,"scatter", hcaes(x=x,y=y)) %>%
hc_title(text ="Imports") %>%
hc_chart(zoomType ="xy")
package_Imports <- data_package %>%
unnest_tokens(word,Imports) %>%
filter(grepl("[A-Za-z]+",word)) %>%
count(Package,word) %>%
bind_tf_idf(word,Package,n) %>%
filter(tf_idf>1) %>%
cast_dfm(document = Package,term = word,value = n) %>%
as.matrix() %>%
unique() %>%
Rtsne()
colnames(package_Imports$Y) <- c("x","y")
hchart(package_Imports$Y,"scatter", hcaes(x=x,y=y)) %>%
hc_title(text ="Imports") %>%
hc_chart(zoomType ="xy")
package_Imports$Y
plot(package_Imports$Y)
package_Imports$Y %>% tibble() %>% hchart("scatter", hcaes(x=x,y=y))
package_Imports$Y %>% tibble() %>% hchart("scatter", hcaes(x=x,y=y))
View(package_Imports)
package_Imports[["Y"]]
package_Imports <- data_package %>%
unnest_tokens(word,Imports) %>%
filter(grepl("[A-Za-z]+",word)) %>%
count(Package,word) %>%
bind_tf_idf(word,Package,n) %>%
filter(tf_idf>1) %>%
cast_dfm(document = Package,term = word,value = n) %>%
as.matrix() %>%
unique() %>%
Rtsne() %$%
Y
library(tidyverse)
library(jiebaR)
library(highcharter)
library(tidytext)
library(quanteda)
library("Rtsne")
data_package <- tools::CRAN_package_db() %>%
select(Package,Title,Description,Imports,Author)
# data_package <- data_package %>%
#   select(Package,Title,Description,Imports)
# is_RStudio <- ifelse(grepl("RStudio",data_package$Author),"RStudio","others")
data_package <- tools::CRAN_package_db() %>%
select(Package,Title,Description,Imports,Author)
data_package <- tools::CRAN_package_db() %>%
select(Package,Title,Description,Imports,Author)
library(magrittr)
package_Imports <- data_package %>%
unnest_tokens(word,Imports) %>%
filter(grepl("[A-Za-z]+",word)) %>%
count(Package,word) %>%
bind_tf_idf(word,Package,n) %>%
filter(tf_idf>1) %>%
cast_dfm(document = Package,term = word,value = n) %>%
as.matrix() %>%
unique() %>%
Rtsne() %$%
Y
colnames(package_Imports$Y) <- c("x","y")
colnames(package_Imports) <- c("x","y")
hchart(package_Imports,"scatter", hcaes(x=x,y=y)) %>%
hc_title(text ="Imports") %>%
hc_chart(zoomType ="xy")
hchart(package_Imports,"scatter", hcaes(x=x,y=y)) %>%
hc_title(text ="Imports")
package_Imports$x
package_Imports[,"x"]
package_Imports %>% tibble()
package_Imports <- data_package %>%
unnest_tokens(word,Imports) %>%
filter(grepl("[A-Za-z]+",word)) %>%
count(Package,word) %>%
bind_tf_idf(word,Package,n) %>%
filter(tf_idf>1) %>%
cast_dfm(document = Package,term = word,value = n) %>%
as.matrix() %>%
unique() %>%
Rtsne() %$%
Y %>%
tibble()
colnames(package_Imports) <- c("x","y")
hchart(package_Imports,"scatter", hcaes(x=x,y=y)) %>%
hc_title(text ="Imports")
package_Imports
names(package_Imports) <- c("x","y")
package_Imports
package_Imports <- data_package %>%
unnest_tokens(word,Imports) %>%
filter(grepl("[A-Za-z]+",word)) %>%
count(Package,word) %>%
bind_tf_idf(word,Package,n) %>%
filter(tf_idf>1) %>%
cast_dfm(document = Package,term = word,value = n) %>%
as.matrix() %>%
unique() %>%
Rtsne() %$%
Y %>%
data.frame()
package_Imports <- data_package %>%
unnest_tokens(word,Imports) %>%
filter(grepl("[A-Za-z]+",word)) %>%
count(Package,word) %>%
bind_tf_idf(word,Package,n) %>%
filter(tf_idf>1) %>%
cast_dfm(document = Package,term = word,value = n) %>%
as.matrix() %>%
unique() %>%
Rtsne() %$%
Y %>%
data.frame()
names(package_Imports) <- c("x","y")
hchart(package_Imports,"scatter", hcaes(x=x,y=y)) %>%
hc_title(text ="Imports")
data_package %>%
unnest_tokens(word,Imports) %>%
filter(grepl("[A-Za-z]+",word)) %>%
count(Package,word) %>%
bind_tf_idf(word,Package,n) %>%
filter(tf_idf>1) %>%
cast_dfm(document = Package,term = word,value = n) %>%
as.matrix() %>%
unique()
data_package %>%
unnest_tokens(word,Imports) %>%
filter(grepl("[A-Za-z]+",word)) %>%
count(Package,word) %>%
bind_tf_idf(word,Package,n) %>%
filter(tf_idf>1) %>%
cast_dfm(document = Package,term = word,value = n) %>%
as.matrix() %>%
unique() %>% str()
package_Imports_uni <- data_package %>%
unnest_tokens(word,Imports) %>%
filter(grepl("[A-Za-z]+",word)) %>%
count(Package,word) %>%
bind_tf_idf(word,Package,n) %>%
filter(tf_idf>1) %>%
cast_dfm(document = Package,term = word,value = n) %>%
as.matrix() %>%
unique()
dpackage_Imports_uni %>%
Rtsne()package_Imports <- dpackage_Imports_uni %>%
Rtsne()
package_Imports <- dpackage_Imports_uni %>%
Rtsne()
package_Imports <- package_Imports_uni %>%
Rtsne()
View(package_Imports)
View(package_Imports_uni)
package_Imports <- package_Imports_uni %>%
Rtsne() %$%
Y %>%
as.data.frame() %>%
mutate(Package = row.names(package_Imports_uni))
View(package_Imports)
names(package_Imports) <- c("x","y","Package")
package_Imports <- left_join(package_Imports,data_package)
is_RStudio <- ifelse(grepl("RStudio",package_Imports$Author),"RStudio","others")
hchart(package_Imports,"scatter", hcaes(x=x,y=y,group = is_RStudio,label = Package ,value = Description)) %>%
hc_title(text ="Imports") %>%
hc_chart(zoomType ="xy") %>%
hc_tooltip(formatter = JS("function () {
return '<b>' + this.point.label + '</b><br/>'+'Description: '+this.point.value;}"))
View(package_Imports)
View(package_Imports)
library(tidyverse)
library(jiebaR)
library(highcharter)
library(tidytext)
library(quanteda)
library("Rtsne")
library(magrittr)
data_package <- tools::CRAN_package_db() %>%
select(Package,Title,Description,Imports,Author)
# data_package <- data_package %>%
#   select(Package,Title,Description,Imports)
# is_RStudio <- ifelse(grepl("RStudio",data_package$Author),"RStudio","others")
package_Description_uni <- data_package %>%
unnest_tokens(word,Description) %>%
filter(grepl("[A-Za-z]+",word)) %>%
count(Package,word) %>%
bind_tf_idf(word,Package,n) %>%
filter(tf_idf>1) %>%
cast_dfm(document = Package,term = word,value = n) %>%
as.matrix() %>%
unique()
package_Description <- package_Description_uni %>%
Rtsne() %$%
Y %>%
as.data.frame() %>%
mutate(Package = row.names(package_Description_uni))
names(package_Description) <- c("x","y","Package")
package_Description <- left_join(package_Description,data_package)
is_RStudio <- ifelse(grepl("RStudio",package_Description$Author),"RStudio","others")
hchart(package_Description,"scatter", hcaes(x=x,y=y,group = is_RStudio,label = Package ,value = Description)) %>%
hc_title(text ="Description") %>%
hc_chart(zoomType ="xy") %>%
hc_tooltip(formatter = JS("function () {
return '<b>' + this.point.label + '</b><br/>'+'Description: '+this.point.value;}"))
package_Title_uni <- data_package %>%
mutate(text= paste(Package,Title)) %>%
filter(grepl("[A-Za-z]+",word)) %>%
count(Package,word) %>%
bind_tf_idf(word,Package,n) %>%
filter(tf_idf>1) %>%
cast_dfm(document = Package,term = word,value = n) %>%
as.matrix() %>%
unique()
package_Title_uni <- data_package %>%
mutate(text= paste(Package,Title)) %>%
unnest_tokens(word,text) %>%
filter(grepl("[A-Za-z]+",word)) %>%
count(Package,word) %>%
bind_tf_idf(word,Package,n) %>%
filter(tf_idf>1) %>%
cast_dfm(document = Package,term = word,value = n) %>%
as.matrix() %>%
unique()
package_Title <- package_Title_uni %>%
Rtsne() %$%
Y %>%
as.data.frame() %>%
mutate(Package = row.names(package_Title_uni))
names(package_Title) <- c("x","y","Package")
package_Title <- left_join(package_Title,data_package)
is_RStudio <- ifelse(grepl("RStudio",package_Title$Author),"RStudio","others")
hchart(package_Title,"scatter", hcaes(x=x,y=y,group = is_RStudio,label = Package ,value = Description)) %>%
hc_title(text ="Title") %>%
hc_chart(zoomType ="xy") %>%
hc_tooltip(formatter = JS("function () {
return '<b>' + this.point.label + '</b><br/>'+'Description: '+this.point.value;}"))
package_Description %>% nrow() %>% print()
package_Title_uni <- data_package %>%
mutate(text= paste(Package,Title)) %>%
unnest_tokens(word,text) %>%
filter(grepl("[A-Za-z]+",word)) %>%
count(Package,word) %>%
bind_tf_idf(word,Package,n) %>%
filter(tf_idf>1) %>%
cast_dfm(document = Package,term = word,value = n) %>%
as.matrix() %>%
unique()
View(package_Title)
package_Title <- package_Title_uni %>%
Rtsne() %$%
Y %>%
as.data.frame() %>%
mutate(Package = row.names(package_Title_uni))
View(package_Title_uni)
names(package_Title) <- c("x","y","Package")
package_Title <- left_join(package_Title,data_package)
is_RStudio <- ifelse(grepl("RStudio",package_Title$Author),"RStudio","others")
package_Title %>% nrow() %>% print()
hchart(package_Title,"scatter", hcaes(x=x,y=y,group = is_RStudio,label = Package ,value = Description)) %>%
hc_title(text ="Title") %>%
hc_chart(zoomType ="xy") %>%
hc_tooltip(formatter = JS("function () {
return '<b>' + this.point.label + '</b><br/>'+'Description: '+this.point.value;}"))
library(tidyverse)
library(jiebaR)
library(highcharter)
library(tidytext)
library(quanteda)
library("Rtsne")
library(magrittr)
data_package <- tools::CRAN_package_db() %>%
select(Package,Title,Description,Imports,Author)
# data_package <- data_package %>%
#   select(Package,Title,Description,Imports)
# is_RStudio <- ifelse(grepl("RStudio",data_package$Author),"RStudio","others")
Rstudio_pg <- c("tidyverse","ggplot2","dplyr","tidyr","purrr","stringr","shiny","rmarkdown","flexdashboard","tensorflow","tidymodels","sparklyr","plumber","reticulate")
# is_RStudio <- ifelse(grepl("RStudio",package_Imports$Author),ifelse(package_Imports$Package %in% Rstudio_pg,"best","RStudio"),"others")
load("G:\\我的雲端硬碟\\meeting\\Task_Views.RData")
data_package <- left_join(data_package,Task_Views,by = "Package")
data_package$Topics[is.na(data_package$Topics)] <- "others"
package_Imports <- data_package %>%
unnest_tokens(word,Imports) %>%
filter(grepl("[A-Za-z]+",word)) %>%
count(Package,word) %>%
bind_tf_idf(word,Package,n) %>%
# filter(tf_idf>1) %>%
cast_dfm(document = Package,term = word,value = n) %>%
textstat_simil(method = "cosine")
package_Imports
View(package_Imports)
package_Imports %>% as.matrix()
pr_simil2dist
library(proxy)
x <- package_Imports %>%  pr_simil2dist()
x
pr_simil2dist
View(x)
View(data_package)
View(package_Imports)
View(package_Imports)
.libPaths()
.libPaths()
wordvec_model <- word2vec(x = c(data_package$Description,data_package$Title))
library(tidyverse)
library(jiebaR)
library(highcharter)
library(tidytext)
library(quanteda)
library("Rtsne")
library(magrittr)
library(wordcloud)
library(word2vec)
library(proxy)
data_package <- tools::CRAN_package_db() %>%
select(Package,Title,Description,Imports,Author)
# data_package <- data_package %>%
#   select(Package,Title,Description,Description)
# is_RStudio <- ifelse(grepl("RStudio",data_package$Author),"RStudio","others")
Rstudio_pg <- c("tidyverse","ggplot2","dplyr","tidyr","purrr","stringr","shiny","rmarkdown","flexdashboard","tensorflow","tidymodels","sparklyr","plumber","reticulate")
# is_RStudio <- ifelse(grepl("RStudio",package_Imports$Author),ifelse(package_Imports$Package %in% Rstudio_pg,"best","RStudio"),"others")
load("G:\\我的雲端硬碟\\meeting\\Task_Views.RData")
data_package <- left_join(data_package,Task_Views,by = "Package")
data_package$Topics[is.na(data_package$Topics)] <- "others"
wordvec_model <- word2vec(x = c(data_package$Description,data_package$Title))
predict(model, "vector", type = "nearest", top_n = 5)
predict(wordvec_model, "vector", type = "nearest", top_n = 5)
predict(wordvec_model, "vector", type = "nearest", top_n = 5)
predict(wordvec_model, "package", type = "nearest", top_n = 5)
predict(wordvec_model, "regression", type = "nearest", top_n = 5)
predict(wordvec_model, "plot", type = "nearest", top_n = 5)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
library(tidyverse)
library(jiebaR)
library(highcharter)
library(tidytext)
library(quanteda)
library("Rtsne")
library(magrittr)
library(wordcloud)
library(word2vec)
library(proxy)
library(packagefinder)
data_package <- tools::CRAN_package_db() %>%
select(Package,Title,Description,Imports,Author)
# data_package <- data_package %>%
#   select(Package,Title,Description,Description)
# is_RStudio <- ifelse(grepl("RStudio",data_package$Author),"RStudio","others")
Rstudio_pg <- c("tidyverse","ggplot2","dplyr","tidyr","purrr","stringr","shiny","rmarkdown","flexdashboard","tensorflow","tidymodels","sparklyr","plumber","reticulate")
# is_RStudio <- ifelse(grepl("RStudio",package_Imports$Author),ifelse(package_Imports$Package %in% Rstudio_pg,"best","RStudio"),"others")
load("G:\\我的雲端硬碟\\meeting\\Task_Views.RData")
data_package <- left_join(data_package,Task_Views,by = "Package")
data_package$Topics[is.na(data_package$Topics)] <- "others"
wordvec_model <- word2vec(x = c(data_package$Description,data_package$Title))
predict(wordvec_model, "vector", type = "nearest", top_n = 5)
predict(wordvec_model, "package", type = "nearest", top_n = 5)
predict(wordvec_model, "regression", type = "nearest", top_n = 5)
predict(wordvec_model, "plot", type = "nearest", top_n = 5)
x <- predict(wordvec_model, "regression", type = "nearest", top_n = 5)
y <- x$term2
findPackage("regression")
for(i in y){
findPackage(i)
}
for(i in y){
findPackage(i) %>% print()
}
for(i in y){
findPackage(i) %>% show()
}
View(x)
y <- x$regression$term2
for(i in y){
findPackage(i) %>% show()
}
for(i in y){
findPackage(i) # %>% show()
}
x <- vector("list",6)
x[[1]] <- findPackage("regression")
x[[1]]
x[[1]] <- findPackage("regression",display = "console")
x[[1]]
x <- predict(wordvec_model, "regression", type = "nearest", top_n = 5)
y <- x[[1]]$term2
getwd()
setwd("G:\\我的雲端硬碟\\Q-point\\highcharts-test-api - 2")
getwd()
library(plumber)
# setwd("C:\\Users\\admin\\Desktop\\test\\highcharts-test3")
# setwd("G:\\我的雲端硬碟\\Q-point\\highcharts-test3")
pr <- plumber::plumb("api.R")
pr$run(port=8000)
# setwd("C:\\Users\\admin\\Desktop\\test\\highcharts-test3")
# setwd("G:\\我的雲端硬碟\\Q-point\\highcharts-test3")
pr <- plumber::plumb("api.R")
library(plumber)
# setwd("C:\\Users\\admin\\Desktop\\test\\highcharts-test3")
# setwd("G:\\我的雲端硬碟\\Q-point\\highcharts-test3")
pr <- plumber::plumb("api.R")
# setwd("C:\\Users\\admin\\Desktop\\test\\highcharts-test3")
# setwd("G:\\我的雲端硬碟\\Q-point\\highcharts-test3")
pr <- plumber::plumb("api.R")
pr$run(port=8000)
data <- read.csv("point.csv")
data$date <- data$date %>% as.POSIXct()
data$ym <- format(data$date,format="%Y-%m")
x <- group_by(data,ym) %>%
summarise(point=sum(point)) %>%
hchart("column",hcaes(x = ym, y = point)) %>%
hc_title(text ="point")
x
x$x
x$width
x$height
x$sizingPolicy
x$dependencies
x$elementId
x$preRenderHook
x$jsHooks
# setwd("C:\\Users\\admin\\Desktop\\test\\highcharts-test3")
# setwd("G:\\我的雲端硬碟\\Q-point\\highcharts-test3")
pr <- plumber::plumb("api.R")
# setwd("C:\\Users\\admin\\Desktop\\test\\highcharts-test3")
# setwd("G:\\我的雲端硬碟\\Q-point\\highcharts-test3")
pr <- plumber::plumb("api.R")
# setwd("C:\\Users\\admin\\Desktop\\test\\highcharts-test3")
# setwd("G:\\我的雲端硬碟\\Q-point\\highcharts-test3")
pr <- plumber::plumb("api.R")
pr$run(port=8000)
y <- htmlwidgets::saveWidget(x)
y <- htmlwidgets::saveWidget(widget = x,file = getwd())
typeof(x)
str(x)
class(x)
y <- htmlwidgets::createWidget("y")
y <- htmlwidgets::createWidget(name = "y",x = NA)
View(y)
# setwd("C:\\Users\\admin\\Desktop\\test\\highcharts-test3")
# setwd("G:\\我的雲端硬碟\\Q-point\\highcharts-test3")
pr <- plumber::plumb("api.R")
pr$run(port=8000)
# setwd("C:\\Users\\admin\\Desktop\\test\\highcharts-test3")
# setwd("G:\\我的雲端硬碟\\Q-point\\highcharts-test3")
pr <- plumber::plumb("api.R")
pr$run(port=8000)
plot(iris$Sepal.Length,iris$Sepal.Width)
# setwd("C:\\Users\\admin\\Desktop\\test\\highcharts-test3")
# setwd("G:\\我的雲端硬碟\\Q-point\\highcharts-test3")
pr <- plumber::plumb("api.R")
pr$run(port=8000)
# setwd("C:\\Users\\admin\\Desktop\\test\\highcharts-test3")
# setwd("G:\\我的雲端硬碟\\Q-point\\highcharts-test3")
pr <- plumber::plumb("api.R")
# setwd("C:\\Users\\admin\\Desktop\\test\\highcharts-test3")
# setwd("G:\\我的雲端硬碟\\Q-point\\highcharts-test3")
pr <- plumber::plumb("api.R")
pr$run(port=8000)
# setwd("C:\\Users\\admin\\Desktop\\test\\highcharts-test3")
# setwd("G:\\我的雲端硬碟\\Q-point\\highcharts-test3")
pr <- plumber::plumb("api.R")
pr$run(port=8000)
# setwd("C:\\Users\\admin\\Desktop\\test\\highcharts-test3")
# setwd("G:\\我的雲端硬碟\\Q-point\\highcharts-test3")
pr <- plumber::plumb("api.R")
pr$run(port=8000)
# setwd("C:\\Users\\admin\\Desktop\\test\\highcharts-test3")
# setwd("G:\\我的雲端硬碟\\Q-point\\highcharts-test3")
pr <- plumber::plumb("api.R")
pr$run(port=8000)
x$body
HTML(x)
HTML
str(x)
saveWidget(x,"test.html")
saveWidget(x,"test.html",selfcontained = F)
tags$div
tags$div(x)
# setwd("C:\\Users\\admin\\Desktop\\test\\highcharts-test3")
# setwd("G:\\我的雲端硬碟\\Q-point\\highcharts-test3")
pr <- plumber::plumb("api.R")
pr$run(port=8000)
# setwd("C:\\Users\\admin\\Desktop\\test\\highcharts-test3")
# setwd("G:\\我的雲端硬碟\\Q-point\\highcharts-test3")
pr <- plumber::plumb("api.R")
pr$run(port=8000)
tagList( tags$div(x))
tagList(list(tags$div(x)))
# setwd("C:\\Users\\admin\\Desktop\\test\\highcharts-test3")
# setwd("G:\\我的雲端硬碟\\Q-point\\highcharts-test3")
pr <- plumber::plumb("api.R")
pr$run(port=8000)
browsable
browsable(tagList(list(tags$div(x))))
x <- browsable(tagList(list(tags$div(x))))
x
View(x)
# setwd("C:\\Users\\admin\\Desktop\\test\\highcharts-test3")
# setwd("G:\\我的雲端硬碟\\Q-point\\highcharts-test3")
pr <- plumber::plumb("api.R")
pr$run(port=8000)
# setwd("C:\\Users\\admin\\Desktop\\test\\highcharts-test3")
# setwd("G:\\我的雲端硬碟\\Q-point\\highcharts-test3")
pr <- plumber::plumb("api.R")
pr$run(port=8000)
