rbinom(10,10,0.5)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(ggplot2)
rnorm(1000,0,1)
x<-matrix(rnorm(1000,0,1),10,100)
z
x
apply(x,1,mean)
apply(x,2,mean)
y<-apply(x,2,mean)
ggplot(data=y, aes(x = y))+geom_histogram()
data=data.frame(y)
ggplot(data=data, aes(x = y))+geom_histogram()
x<-matrix(rnorm(10000,0,1),10,1000)
y<-apply(x,2,mean)
data=data.frame(y)
ggplot(data=data, aes(x = y))+geom_histogram()
x<-matrix(rnorm(20000,0,1),20,1000)
y<-apply(x,2,mean)
data=data.frame(y)
ggplot(data=data, aes(x = y))+geom_histogram()
x<-matrix(rnorm(50000,0,1),50,1000)
y<-apply(x,2,mean)
data=data.frame(y)
ggplot(data=data, aes(x = y))+geom_histogram()
x<-matrix(rnorm(50000,0,1),50,1000)
y<-apply(x,2,mean)
data=data.frame(y)
ggplot(data=data, aes(x = y))+geom_histogram()
ggplot(data=data, aes(x = y))+geom_histogram()+geom_density()
ggplot(data=data, aes(x = y))+geom_density()
plot1<-ggplot(data=data, aes(x = y))+geom_histogram(binwidth=0.5)+geom_density()
plot1
ggplot(data=data, aes(x = y))+geom_histogram(binwidth=1)
ggplot(data=data, aes(x = y))+geom_histogram(binwidth=10)
ggplot(data=data, aes(x = y))+geom_histogram(binwidth=30)
x<-matrix(rnorm(50000,0,1),50,1000)
y<-apply(x,2,mean)
data=data.frame(y)
ggplot(data=data, aes(x = y))+geom_histogram(binwidth=300)
ggplot(data=data, aes(x = y))+geom_histogram(binwidth=0.01)
ggplot(data=data, aes(x = y))+geom_histogram(binwidth=0.05)
ggplot(data=data, aes(x = y))+geom_density()
ggplot(data=data, aes(x = y))geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis
binwidth=.5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
ggplot(data=data, aes(x = y))geom_histogram(aes(y=..density..),binwidth=.5,colour="black", fill="white") +geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
ggplot(data=data, aes(x = y))+geom_histogram(aes(y=..density..),binwidth=.5,colour="black", fill="white") +geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
ggplot(data=data, aes(x = y))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
x<-matrix(rnorm(50000,10,1),50,1000)
y<-apply(x,2,mean)
data=data.frame(y)
plot1<-ggplot(data=data, aes(x = y))+geom_histogram(binwidth=1)+geom_density()
plot1+scale_y_continuous()+geom_density()
ggplot(data=data, aes(x = y))+geom_histogram(binwidth=0.05)
ggplot(data=data, aes(x = y))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
x<-matrix(rnorm(50000,10,1),50,1000)
data=data.frame(apply(x,2,mean))
ggplot(data=data, aes(x = y))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
x<-matrix(rnorm(50000,10,1),50,1000)
data=data.frame(apply(x,2,mean))
ggplot(data=data, aes(x = y))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
x<-matrix(rnorm(50000,10,1),50,100)
data=data.frame(apply(x,2,mean))
ggplot(data=data, aes(x = y))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
x<-matrix(rnorm(5000,10,1),50,100)
data=data.frame(apply(x,2,mean))
ggplot(data=data, aes(x = y))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
x<-matrix(rnorm(10000,10,1),50,200)
data=data.frame(apply(x,2,mean))
ggplot(data=data, aes(x = y))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
n<-50
k<-300
x<-matrix(rnorm(n*k,10,1),n,k)
data=data.frame(apply(x,2,mean))
ggplot(data=data, aes(x = y))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
k<-400
x<-matrix(rnorm(n*k,10,1),n,k)
data=data.frame(apply(x,2,mean))
ggplot(data=data, aes(x = y))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
k<-500
x<-matrix(rnorm(n*k,10,1),n,k)
data=data.frame(apply(x,2,mean))
ggplot(data=data, aes(x = y))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
k<-600
x<-matrix(rnorm(n*k,10,1),n,k)
data=data.frame(apply(x,2,mean))
ggplot(data=data, aes(x = y))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
k<-700
x<-matrix(rnorm(n*k,10,1),n,k)
data=data.frame(apply(x,2,mean))
ggplot(data=data, aes(x = y))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
k<-1000
x<-matrix(rnorm(n*k,10,1),n,k)
data=data.frame(apply(x,2,mean))
ggplot(data=data, aes(x = y))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
k<-800
x<-matrix(rnorm(n*k,10,1),n,k)
data=data.frame(apply(x,2,mean))
ggplot(data=data, aes(x = y))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
k<-900
x<-matrix(rnorm(n*k,10,1),n,k)
data=data.frame(apply(x,2,mean))
ggplot(data=data, aes(x = y))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
k<-1000
x<-matrix(rnorm(n*k,10,1),n,k)
data=data.frame(apply(x,2,mean))
ggplot(data=data, aes(x = y))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
n<-50
k<-1000#1000最低
x<-matrix(rnorm(n*k,10,1),n,k)
data=data.frame(apply(x,2,mean))
View(data)
data=data.frame(x=apply(x,2,mean))
View(data)
ggplot(data=data, aes(x = x))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#FFFFFF")  # Overlay with transparent density plot
ggplot(data=data, aes(x = x))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#0000CC")  # Overlay with transparent density plot
ggplot(data=data, aes(x = x))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#00FF00")  # Overlay with transparent density plot
ggplot(data=data, aes(x = x))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#000000")  # Overlay with transparent density plot
n<-50
k<-1000#1000最低
x<-matrix(rnorm(n*k,10,1),n,k)
data=data.frame(x=apply(x,2,mean))
ggplot(data=data, aes(x = x))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#000000")  # Overlay with transparent density plot
runApp('C:/Users/USER/Desktop/Central_limit_theorem')
ggplot(data=data, aes(x = x))+geom_histogram(aes(y=..density..),colour="black", fill="white") +geom_density(alpha=.2, fill="#000000")  # Overlay with transparent density plot
n<-500
k<-1000#1000最低
x<-matrix(rnorm(n*k,10,1),n,k)
data=data.frame(x=apply(x,2,mean))
ggplot(data=data, aes(x = x))+geom_histogram(aes(y=..density..),colour="black", fill="white") +geom_density(alpha=.2, fill="#000000")  # Overlay with transparent density plot
ggplot(data=data, aes(x = x))+geom_histogram(aes(y=..density..),binwidth=.05,colour="black", fill="white") +geom_density(alpha=.2, fill="#000000")  # Overlay with transparent density plot
runApp('C:/Users/USER/Desktop/Central_limit_theorem')
n<-500
k<-1000#1000最低
x<-matrix(rnorm(n*k,10,1),n,k)
data=data.frame(x=apply(x,2,mean))
ggplot(data=data, aes(x = x))+geom_histogram(aes(y=..density..),bins=10,colour="black", fill="white") +geom_density(alpha=.2, fill="#000000")  # Overlay with transparent density plot
n<-500
k<-1000#1000最低
x<-matrix(rnorm(n*k,10,1),n,k)
data=data.frame(x=apply(x,2,mean))
ggplot(data=data, aes(x = x))+geom_histogram(aes(y=..density..),bins=20,colour="black", fill="white") +geom_density(alpha=.2, fill="#000000")  # Overlay with transparent density plot
ggplot(data=data, aes(x = x))+geom_histogram(aes(y=..density..),bins=30,colour="black", fill="white") +geom_density(alpha=.2, fill="#000000")  # Overlay with transparent density plot
ggplot(data=data, aes(x = x))+geom_histogram(aes(y=..density..),bins=15,colour="black", fill="white") +geom_density(alpha=.2, fill="#000000")  # Overlay with transparent density plot
ggplot(data=data, aes(x = x))+geom_histogram(aes(y=..density..),bins=10,colour="black", fill="white") +geom_density(alpha=.2, fill="#000000")  # Overlay with transparent density plot
ggplot(data=data, aes(x = x))+geom_histogram(aes(y=..density..),bins=16,colour="black", fill="white") +geom_density(alpha=.2, fill="#000000")  # Overlay with transparent density plot
ggplot(data=data, aes(x = x))+geom_histogram(aes(y=..density..),bins=17,colour="black", fill="white") +geom_density(alpha=.2, fill="#000000")  # Overlay with transparent density plot
ggplot(data=data, aes(x = x))+geom_histogram(aes(y=..density..),bins=20,colour="black", fill="white") +geom_density(alpha=.2, fill="#000000")  # Overlay with transparent density plot
runApp('C:/Users/USER/Desktop/Central_limit_theorem')
shiny::runApp()
runApp('C:/Users/USER/Desktop/Basic_Probability/Central_limit_theorem')
runApp('C:/Users/USER/Desktop/Basic_Probability/Central_limit_theorem')
runApp('C:/Users/USER/Desktop/Basic_Probability/Central_limit_theorem')
runApp()
shiny::runApp()
runApp('C:/Users/USER/Desktop/Basic_Probability/Central_limit_theorem')
runApp()
runApp('C:/Users/USER/Desktop/Basic_Probability/Central_limit_theorem')
?distribution
rmultinom(1,1,c(0.5,0.5))
rmultinom(1,1,c(0.5,0.2,0.2,0.1))
data<-read.csv("C:/Users/USER/Desktop/黑沙/黑結晶裝備3.csv")
data
p<-list("clothes_green"=matrix(0,21,21),"clothes_blue"=matrix(0,21,21),"clothes_orange"=matrix(0,21,21),"accessories_green"=matrix(0,6,6),"accessories_blue"=matrix(0,6,6),"accessories_orange"=matrix(0,6,6))
FUN<-function(x){
rownames(x)<-0:(nrow(x)-1)
colnames(x)<-0:(ncol(x)-1)
return(x)
}
p<-lapply(p,FUN)
for(i in 1:17){
x<-which(data$類別=="服裝"&data$物品等階=="綠"&data$強化等級==i)
p$clothes_green[i,i]<-1-data$機率[x]
p$clothes_green[i,i+1]<-data$機率[x]
}
for(i in 18:20){
x<-which(data$類別=="服裝"&data$物品等階=="綠"&data$強化等級==i)
p$clothes_green[i,i-1]<-1-data$機率[x]
p$clothes_green[i,i+1]<-data$機率[x]
}
p$clothes_green[21,21]<-1
for(i in 1:17){
x<-which(data$類別=="服裝"&data$物品等階=="藍"&data$強化等級==i)
p$clothes_blue[i,i]<-1-data$機率[x]
p$clothes_blue[i,i+1]<-data$機率[x]
}
for(i in 18:20){
x<-which(data$類別=="服裝"&data$物品等階=="藍"&data$強化等級==i)
p$clothes_blue[i,i-1]<-1-data$機率[x]
p$clothes_blue[i,i+1]<-data$機率[x]
}
p$clothes_blue[21,21]<-1
for(i in 1:17){
x<-which(data$類別=="服裝"&data$物品等階=="橘"&data$強化等級==i)
p$clothes_orange[i,i]<-1-data$機率[x]
p$clothes_orange[i,i+1]<-data$機率[x]
}
for(i in 18:20){
x<-which(data$類別=="服裝"&data$物品等階=="橘"&data$強化等級==i)
p$clothes_orange[i,i-1]<-1-data$機率[x]
p$clothes_orange[i,i+1]<-data$機率[x]
}
p$clothes_orange[21,21]<-1
for(i in 1:5){
x<-which(data$類別=="項鍊"&data$物品等階=="綠"&data$強化等級==i)
p$accessories_green[i,1]<-1-data$機率[x]
p$accessories_green[i,i+1]<-data$機率[x]
}
p$accessories_green[6,6]<-1
for(i in 1:5){
x<-which(data$類別=="項鍊"&data$物品等階=="藍"&data$強化等級==i)
p$accessories_blue[i,1]<-1-data$機率[x]
p$accessories_blue[i,i+1]<-data$機率[x]
}
p$accessories_blue[6,6]<-1
for(i in 1:5){
x<-which(data$類別=="項鍊"&data$物品等階=="橘"&data$強化等級==i)
p$accessories_orange[i,1]<-1-data$機率[x]
p$accessories_orange[i,i+1]<-data$機率[x]
}
p$accessories_orange[6,6]<-1
prob_up<-function(x){
if(max(which(x!=0))!=(length(x))){
if(length(which(x!=0))==2){
x[max(which(x!=0))]<-1
x[min(which(x!=0))]<-0
}else{
x[max(which(x!=0))]<-1
}
}else{
if(x[length(x)]!=1){
if(length(which(x!=0))==2){
x[max(which(x!=0))]<-0
x[min(which(x!=0))]<-1
}else{
x[max(which(x!=0))]<-0
}
}
}
return(x)
}
Markov_chain<-function(p,x,use,prob){
#p是機率矩陣,x是狀態,use是各狀態需要消耗的黑結晶,prob是要求的機率
#x_2<-x
#p_2<-p
#p_2<-t(apply(p_2,1,prob_up))
black_gem<-0
black_gem_2<-0
black_gem_3<-0
while(x[length(x)]<prob){
black_gem<-black_gem+x%*%use
#black_gem_2<-black_gem_2+x_2%*%use
black_gem_2<-black_gem_2+(x%*%use/(1-x[length(x)]))
black_gem_3<-black_gem_3+t(rmultinom(1,1,x))%*%use
x<-x%*%p
#x_2<-x_2%*%p_2
}
return(c(black_gem,black_gem_2,black_gem_3))
}
NofSup<-t(matrix(c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,1,1,1,1,1,2,2,2,3,3,3,4,4,5,5,5,5,5,5,5),20,3))
NofSup2<-matrix(c(1,5,50,2,10,55,3,15,65,4,20,80,5,25,100),3,5)
use_mc_1<-rep(0,nrow(data))
use_mc_2<-rep(0,nrow(data))
data<-cbind(data,use_mc_1,use_mc_2)
for(i in 1:20){
prob1<-p$clothes_green[1:(i+1),1:(i+1)]
prob1[(i+1),]<-c(rep(0,i),1)
x<-c(1,rep(0,i))
use<-matrix(c(NofSup[1,1:i],0),i+1,1)
prob2<-0.95
y<-Markov_chain(prob1,x,use,prob2)
data$use_mc_1[which(data$類別=="服裝"&data$物品等階=="綠"&data$強化等級==i)]<-ceiling(y[1])
data$use_mc_2[which(data$類別=="服裝"&data$物品等階=="綠"&data$強化等級==i)]<-y[2]
cat("綠色衣服有95%機率在平均消耗",y[1],"個黑結晶後,可以強化到",i,"最大預期消耗為",y[2],"個黑結晶",y[3],"\n")
}
NofSup<-t(matrix(c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,1,1,1,1,1,2,2,2,3,3,3,4,4,5,5,5,5,5,5,5),20,3))
NofSup2<-matrix(c(1,5,50,2,10,55,3,15,65,4,20,80,5,25,100),3,5)
use_mc_1<-rep(0,nrow(data))
use_mc_2<-rep(0,nrow(data))
data<-cbind(data,use_mc_1,use_mc_2)
for(i in 1:20){
prob1<-p$clothes_green[1:(i+1),1:(i+1)]
prob1[(i+1),]<-c(rep(0,i),1)
x<-c(1,rep(0,i))
use<-matrix(c(NofSup[1,1:i],0),i+1,1)
prob2<-0.95
y<-Markov_chain(prob1,x,use,prob2)
data$use_mc_1[which(data$類別=="服裝"&data$物品等階=="綠"&data$強化等級==i)]<-ceiling(y[1])
data$use_mc_2[which(data$類別=="服裝"&data$物品等階=="綠"&data$強化等級==i)]<-y[2]
cat("綠色衣服有95%機率在平均消耗",y[1],"個黑結晶後,可以強化到",i,"最大預期消耗為",y[2],"個黑結晶",y[3],"\n")
}
